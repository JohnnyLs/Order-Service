server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: order-service
  data:
    mongodb:
      uri: ${MONGO_URI}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USER}
      password: ${REDIS_PASS}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      request-timeout-ms: 30000
      properties:
        sasl:
          mechanism: PLAIN
          jaas:
            config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_SASL_USERNAME}" password="${KAFKA_SASL_PASSWORD}";
        security:
          protocol: SASL_SSL

app:
  kafka:
    topic: ${KAFKA_TOPIC:orders.events}

management:
  endpoints:
    web:
      exposure:
        include: health
  health:
    mongodb:
      enabled: true
    redis:
      enabled: true
    kafka:
      enabled: true

logging:
  level:
    com.example.orderservice: ${LOGGING_LEVEL_COM_EXAMPLE:INFO}
    org.springframework.data.mongodb: DEBUG